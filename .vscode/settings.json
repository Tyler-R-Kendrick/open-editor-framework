{
  // Editor settings
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.defaultFormatter": null,
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.rulers": [
    80
  ],
  "editor.wordWrap": "bounded",
  "editor.wordWrapColumn": 80,
  // File associations
  "files.associations": {
    "*.ts": "typescript",
    "*.js": "javascript",
    "*.json": "jsonc"
  },
  // TypeScript settings
  "typescript.preferences.renameShorthandProperties": false,
  "typescript.preferences.includePackageJsonAutoImports": "on",
  "typescript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.format.insertSpaceAfterCommaDelimiter": true,
  "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
  "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
  "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
  "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
  // ESLint settings
  "eslint.validate": [
    "javascript",
    "typescript"
  ],
  "eslint.format.enable": true,
  "eslint.workingDirectories": [
    {
      "mode": "auto"
    }
  ],
  // Prettier settings
  "prettier.configPath": ".prettierrc",
  // Language specific settings
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features",
    "css.validate": false,
    "css.lint.unknownAtRules": "ignore"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[markdown]": {
    "editor.defaultFormatter": "vscode.markdown-language-features",
    "editor.wordWrap": "on",
    "editor.rulers": []
  },
  // Terminal settings
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.fontSize": 14,
  // Explorer settings
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml",
    "*.css": "${capture}.css.map",
    "*.scss": "${capture}.css, ${capture}.css.map"
  },
  // Git settings
  "git.openRepositoryInParentFolders": "never",
  "git.autofetch": true,
  "git.confirmSync": false,
  // Search settings
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/.git": true,
    "**/.DS_Store": true,
    "**/coverage": true
  },
  // Problems settings
  "problems.showCurrentInStatus": true,
  // Live Server settings (if using Live Server extension)
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  // Testing settings
  "testing.automaticallyOpenPeekView": "never",
  "testing.followRunningTest": true,
  // Debug settings
  "debug.openDebug": "openOnDebugBreak",
  "debug.inlineValues": "on",
  "debug.focusWindowOnBreak": true,
  "debug.showBreakpointsInOverviewRuler": true,
  // Tailwind CSS settings
  "tailwindCSS.includeLanguages": {
    "css": "css",
    "html": "html",
    "javascript": "javascript",
    "typescript": "typescript",
    "javascriptreact": "javascriptreact",
    "typescriptreact": "typescriptreact"
  },
  "tailwindCSS.experimental.classRegex": [
    [
      "cva\\(([^)]*)\\)",
      "[\"'`]([^\"'`]*).*?[\"'`]"
    ],
    [
      "cx\\(([^)]*)\\)",
      "(?:'|\"|`)([^']*)(?:'|\"|`)"
    ]
  ],
  "tailwindCSS.validate": true,
  "css.validate": false,
  "scss.validate": false,
  "less.validate": false
}